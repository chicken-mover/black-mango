"""
:mod:`configure` --- Configuration and universal variables
==========================================================

The values in this file are used throughout the app, as well as in MangoEd and
by tools like the Git commit hooks and the Sphinx conf.py file.

It's pretty much a grab-bag of values for many different purposes, and could
probably be split up more sensibly at some point in the future.
"""

import logging
import pyglet

#: Current version. This should match the currently tagged release.
VERSION = '0.0.0a'

#: Pyglet window title. Not visible, but some OSes wills still show it, as with
#: Windows showing titles on the task bar.
MAIN_WINDOW_TITLE = 'BLACK MANGO'

#: Default value for the log level. Can be passed in with the --debug flag.
DEBUG = 0 #logging.WARN
#: Whether to start up in full screen or not. Can be set with the --fullscreen
#: flag.
FULLSCREEN = False

#: Grid size. Used for translating world coordinates into screen coordinates.
#: This is how many pixels square each grid space is.
GRID_SIZE = 50

#: Main game window size, in pixels.
SCREEN_SIZE = (GRID_SIZE * 19, GRID_SIZE * 11)

#: Header string for save game files (depricated). This no longer has any
#: relevance, because we are likely to move to stateless saved games.
SAVE_GAME_VERSION='BLACKMANGO-001'

#: Default POSIX data dir (except Mac OS). Can be modified with the --data-dir
#: flag.
POSIX_DATA_DIR = '~/.blackmango'

#: Batch rendering groups used by :py:class:`pyglet.sprite.Sprite` subclasses.
ORDERED_GROUPS = {
    'background': pyglet.graphics.OrderedGroup(0),
    'mobs': pyglet.graphics.OrderedGroup(2),
    'foreground': pyglet.graphics.OrderedGroup(3),
}

#: A constant used to offset the position of the player sprite when stepping up
#: onto platforms. Needs adjusting.
HEIGHT_OFFSET = 7 # In pixels

#: Number of frames when animating movement slides. potentially will be used for
#: sprite animations, too. The number must be a common factor of the
#: :data:`GRID_SIZE` value, or animation will become jittery.
BASE_ANIMATION_FRAMES = 10

#: Loaded by :func:`blackmango.assetloader.load_colordata`, a dict of color 
#: values out of assets/colorscheme.xml
COLORS = {}

#: Global value for accessing the logger set up by :func:`setup_logger` from
#: other modules.
logger = None

def setup_logger(lvl = DEBUG):
    """
    Called by the main initialization sequence. Sets up a logger with the output
    level set to *lvl* (which should be relevant data value from
    :ref:`the logging module <python:levels>`).
    """
    global logger
    # Set up console logging
    logging.basicConfig()
    logger = logging.getLogger('blackmango')
    logger.setLevel(DEBUG)

#: Which level to begin new games at.
STARTING_LEVEL = 'test' #'puzzle_demo1'

#: Template for data files generated by MangoEd.
LEVEL_TEMPLATE = """
from blackmango.levels.%(LEVEL_NAME)s.triggers import LevelTriggers

SIZE = %(SIZE)s
NAME = %(NAME)s

TRIGGERS = LevelTriggers

# Everything below this line is automatically generated.

BACKGROUNDS = %(BACKGROUNDS)s
PLAYER_START = %(PLAYER_START)s
BLOCKS = %(BLOCKS)s
MOBS = %(MOBS)s
"""

#: Template for level trigger fils generated by MangoEd.
TRIGGER_TEMPLATE = """
import blackmango.levels

class LevelTriggers(blackmango.levels.BasicLevelTriggers):
    pass
"""
